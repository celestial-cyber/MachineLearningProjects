# ---------------------------------------
# Logistic Regression Example
# ---------------------------------------

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report
import matplotlib.pyplot as plt
import seaborn as sns

# -----------------------------
# Example Dataset
# -----------------------------
data = {
    'Feature1': [2.5, 3.5, 1.2, 4.0, 2.0, 3.0, 2.8, 3.8],
    'Feature2': [1.5, 2.2, 1.1, 3.3, 2.5, 2.8, 2.4, 3.0],
    'Target':   [0, 0, 0, 1, 0, 1, 0, 1]
}

df = pd.DataFrame(data)
print("\n--- Dataset ---\n")
print(df)

# -----------------------------
# Features (X) and Target (y)
# -----------------------------
X = df[['Feature1', 'Feature2']]
y = df['Target']

# -----------------------------
# Train-Test Split
# -----------------------------
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# -----------------------------
# Model Training
# -----------------------------
model = LogisticRegression()
model.fit(X_train, y_train)

# -----------------------------
# Predictions
# -----------------------------
y_pred = model.predict(X_test)

# -----------------------------
# Evaluation
# -----------------------------
accuracy = accuracy_score(y_test, y_pred)
conf_matrix = confusion_matrix(y_test, y_pred)
class_report = classification_report(y_test, y_pred)

print(f"\nAccuracy: {accuracy:.2f}")
print("\nConfusion Matrix:\n", conf_matrix)
print("\nClassification Report:\n", class_report)

# -----------------------------
# Plot Confusion Matrix
# -----------------------------
plt.figure(figsize=(6, 4))
sns.heatmap(conf_matrix, annot=True, fmt='d', cmap='Blues',
            xticklabels=['Class 0', 'Class 1'],
            yticklabels=['Class 0', 'Class 1'])
plt.xlabel("Predicted Label")
plt.ylabel("True Label")
plt.title("Confusion Matrix")
plt.show()
